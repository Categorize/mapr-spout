// Copyright (c) 2013 MapR Technologies

option java_generic_services = true;
option java_package = "com.mapr.franz.catcher.wire";
option java_outer_classname = "Catcher";

// gets a current list of servers
message Hello {
    optional uint64 clientId = 1;      // client id for logging
    optional string application = 2;  // application name for logging purposes
}

message HelloResponse {
    optional uint64 serverId = 1;
    repeated Host host = 2;
    repeated Server cluster = 3;
}

// sends a message to a topic
message LogMessage {
    optional uint64 clientId = 1;
    optional string topic = 2;
    optional bytes payload = 3;
}

// the response includes one or more redirects for the next time
message LogMessageResponse {
    optional uint64 serverId = 1;
    optional bool successful = 2;
    optional string backTrace = 3;
    optional TopicMapping redirect = 4;
}

// signs off ... mostly for logging purposes
message Close {
    optional uint64 clientId = 1;
}

message CloseResponse {
    optional uint64 serverId = 1;
}

// message components
message TopicMapping {
    optional string topic = 1;
    optional uint64 serverId = 2;
    repeated Host host = 3;
}

message Server {
    optional uint64 serverId = 1;
    repeated Host host = 2;
}

message Host {
    optional string hostName = 2;
    optional uint32 port = 3;
}

// the service itself
service CatcherService {
    rpc hello(Hello) returns (HelloResponse);
    rpc log(LogMessage) returns (LogMessageResponse);
    rpc close(Close) returns (CloseResponse);
}
